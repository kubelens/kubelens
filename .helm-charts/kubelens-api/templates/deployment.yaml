apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
  {{- range .Values.metaLabels }}
    {{ .name }}: {{ .value | quote }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      {{- range .Values.metaLabels }}
        {{ .name }}: {{ .value | quote }}
      {{- end }}
    spec:
      serviceAccountName: kubelens-api
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag}}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources: 
          requests: 
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
          limits: 
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
        ports:
        - name: http
          containerPort: {{ .Values.service.containerPort }}
        volumeMounts:
        - name: config-volume
          mountPath: {{ .Values.configMap.mountPath }}
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
        {{- if .Values.env }}
        env:
        {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ .value | quote }}
        {{- end }}
        {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: "{{ .Release.Name }}-cm"
